# Generated by Django 3.1.6 on 2022-09-13 08:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('hod', 'HOD'), ('teacher', 'Teacher'), ('student', 'Student'), ('trainer', 'Trainer'), ('trainee', 'Trainee'), ('admin', 'Admin')], default='admin', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='profile-pic/')),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{9,13}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=62, null=True)),
                ('pin_code', models.IntegerField(blank=True, null=True)),
                ('department', models.CharField(choices=[('tuition', 'Tuition'), ('1-4', ' Lower Primary'), ('5-7', 'Upper Primary'), ('8-10', 'High School'), ('+1-science', '+1 Science'), ('+2-science', '+2 science'), ('+1-commerce', '+1 Commerce'), ('+2-commerce', '+2 Commerce'), ('b.com/m.com', 'B.com/ M.com'), ('civil-engineering', 'Civil Engineering'), ('mechanical-engineering', 'Mechanical Engineering'), ('electrical&electronics-engineering', 'Electrical&Electronics Engineering'), ('computer-science-engineering', 'Computer Science Engineering')], max_length=64)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=6, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('department', models.CharField(choices=[('1-4', ' Lower Primary'), ('5-7', 'Upper Primary'), ('8-10', 'High School'), ('+1-science', '+1 Science'), ('+2-science', '+2 science'), ('+1-commerce', '+1 Commerce'), ('+2-commerce', '+2 Commerce'), ('b.com/m.com', 'B.com/ M.com'), ('civil-engineering', 'Civil Engineering'), ('mechanical-engineering', 'Mechanical Engineering'), ('electrical&electronics-engineering', 'Electrical&Electronics Engineering'), ('computer-science-engineering', 'Computer Science Engineering')], max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('1-4', ' Lower Primary'), ('5-7', 'Upper Primary'), ('8-10', 'High School'), ('+1-science', '+1 Science'), ('+2-science', '+2 science'), ('+1-commerce', '+1 Commerce'), ('+2-commerce', '+2 Commerce'), ('b.com/m.com', 'B.com/ M.com'), ('civil-engineering', 'Civil Engineering'), ('mechanical-engineering', 'Mechanical Engineering'), ('electrical&electronics-engineering', 'Electrical&Electronics Engineering'), ('computer-science-engineering', 'Computer Science Engineering')], max_length=36)),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Trainers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=128)),
                ('experience', models.CharField(max_length=128)),
                ('salary', models.IntegerField()),
                ('available_time', models.CharField(choices=[('4-5', '4 PM to 5 PM'), ('5-6', '5 PM to 6 PM'), ('6-7', '6 PM to 7 PM'), ('7-8', '7 PM to 8 PM'), ('8-9', '8 PM to 9 PM'), ('9-10', '9 PM to 10 PM')], max_length=32)),
                ('student_limit', models.IntegerField(default=5)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(max_length=128)),
                ('mother_name', models.CharField(max_length=128)),
                ('guardian_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{9,13}$')])),
                ('school_name', models.CharField(max_length=256)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=128)),
                ('experience', models.CharField(max_length=128)),
                ('available_time', models.CharField(choices=[('4-5', '4 PM to 5 PM'), ('5-6', '5 PM to 6 PM'), ('6-7', '6 PM to 7 PM'), ('7-8', '7 PM to 8 PM'), ('8-9', '8 PM to 9 PM'), ('9-10', '9 PM to 10 PM')], max_length=32)),
                ('salary', models.IntegerField()),
                ('student_limit', models.IntegerField(default=5)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(max_length=128)),
                ('mother_name', models.CharField(max_length=128)),
                ('guardian_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{9,13}$')])),
                ('standard', models.CharField(blank=True, max_length=20, null=True)),
                ('board', models.CharField(blank=True, max_length=20, null=True)),
                ('school_name', models.CharField(max_length=256)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SelectedClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HOD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=128)),
                ('experience', models.CharField(max_length=128)),
                ('salary', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
